{
  "info": {
    "name": "Engage Digital API",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Attachments",
      "item": [
        {
          "name": "Getting all attachments",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/attachments",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "attachments"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating an attachment",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/attachments",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "attachments"
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Content-Type",
                "value": "multipart/form-data:"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting an attachment from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/attachments/:attachmentId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "attachments",
                ":attachmentId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Getting all categories",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/categories",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "parent_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter categories on given category parent id.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a category",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/categories",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "categories"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Category name.",
                  "disabled": true
                },
                {
                  "key": "parent_id",
                  "value": "\u003cstring\u003e",
                  "description": "ID of parent category.",
                  "disabled": true
                },
                {
                  "key": "color",
                  "value": "\u003cinteger\u003e",
                  "description": "displayed color for the category, see Category colors. ",
                  "disabled": true
                },
                {
                  "key": "mandatory",
                  "value": "\u003cboolean\u003e",
                  "description": "mandatory categorization (Boolean).",
                  "disabled": true
                },
                {
                  "key": "multiple",
                  "value": "\u003cboolean\u003e",
                  "description": "allow to assign multiple child categories (Boolean).",
                  "disabled": true
                },
                {
                  "key": "post_qualification",
                  "value": "\u003cboolean\u003e",
                  "description": "post qualification (Boolean).",
                  "disabled": true
                },
                {
                  "key": "unselectable",
                  "value": "\u003cboolean\u003e",
                  "description": "root category is unselectable (Boolean).",
                  "disabled": true
                },
                {
                  "key": "source_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of source id.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a category from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/categories/:categoryId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "categories",
                ":categoryId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a category",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/categories/:categoryId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "categories",
                ":categoryId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Category name.",
                  "disabled": true
                },
                {
                  "key": "parent_id",
                  "value": "\u003cstring\u003e",
                  "description": "ID of parent category.",
                  "disabled": true
                },
                {
                  "key": "color",
                  "value": "\u003cinteger\u003e",
                  "description": "displayed color for the category, see Category colors. ",
                  "disabled": true
                },
                {
                  "key": "mandatory",
                  "value": "\u003cboolean\u003e",
                  "description": "mandatory categorization (Boolean).",
                  "disabled": true
                },
                {
                  "key": "multiple",
                  "value": "\u003cboolean\u003e",
                  "description": "allow to assign multiple child categories (Boolean).",
                  "disabled": true
                },
                {
                  "key": "post_qualification",
                  "value": "\u003cboolean\u003e",
                  "description": "post qualification (Boolean).",
                  "disabled": true
                },
                {
                  "key": "unselectable",
                  "value": "\u003cboolean\u003e",
                  "description": "root category is unselectable (Boolean).",
                  "disabled": true
                },
                {
                  "key": "source_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of source id.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a category",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/categories/:categoryId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "categories",
                ":categoryId"
              ],
              "query": [
                {
                  "key": "take_over_category_id",
                  "value": "\u003cstring\u003e",
                  "description": "ID of a category to recategorize (optional).",
                  "disabled": true
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Channels",
      "item": [
        {
          "name": "Getting all channels",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/channels",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "channels"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a channel from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/channels/:channelId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "channels",
                ":channelId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a channel",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/channels/:channelId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "channels",
                ":channelId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the channel.",
                  "disabled": true
                },
                {
                  "key": "source_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing id of each source assigned to a channel (multiple).",
                  "disabled": true
                },
                {
                  "key": "soft_capability",
                  "value": "\u003cinteger\u003e",
                  "description": "Number of tasks that can be assigned to agent by the routing before they are considered \"occupied\".",
                  "disabled": true
                },
                {
                  "key": "hard_capability",
                  "value": "\u003cinteger\u003e",
                  "description": "M​aximum number of tasks that can be assigned to agents.",
                  "disabled": true
                },
                {
                  "key": "task_timeout_seconds",
                  "value": "\u003cinteger\u003e",
                  "description": "this field defines the time before a task expires (in seconds).",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Communities",
      "item": [
        {
          "name": "Getting all communities",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/communities",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "communities"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a community from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/communities/:communityId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "communities",
                ":communityId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Sources",
      "item": [
        {
          "name": "Getting all sources",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_sources",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_sources"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a source from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_sources/:sourceId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_sources",
                ":sourceId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a source",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_sources/:sourceId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_sources",
                ":sourceId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Source name",
                  "disabled": true
                },
                {
                  "key": "active",
                  "value": "\u003cboolean\u003e",
                  "description": "Activate/deactivate the source (Boolean)",
                  "disabled": true
                },
                {
                  "key": "channel_id",
                  "value": "\u003cstring\u003e",
                  "description": "Channel",
                  "disabled": true
                },
                {
                  "key": "color",
                  "value": "\u003cinteger\u003e",
                  "description": "Color of the icon (see S​ ource colors​) (Integer)",
                  "disabled": true
                },
                {
                  "key": "sla_response",
                  "value": "\u003cinteger\u003e",
                  "description": "Response time (seconds)",
                  "disabled": true
                },
                {
                  "key": "sla_expired_strategy",
                  "value": "\u003cstring\u003e",
                  "description": "SLA expired strategy (\"max\", \"half\" or \"base\")",
                  "disabled": true
                },
                {
                  "key": "intervention_messages_boost",
                  "value": "\u003cinteger\u003e",
                  "description": "Priority boost of messages with intervention (Integer)",
                  "disabled": true
                },
                {
                  "key": "transferred_tasks_boost",
                  "value": "\u003cinteger\u003e",
                  "description": "Priority boost of transferred tasks (Integer)",
                  "disabled": true
                },
                {
                  "key": "hidden_from_stats",
                  "value": "\u003cboolean\u003e",
                  "description": "Hide from statistics (Boolean)",
                  "disabled": true
                },
                {
                  "key": "default_category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Default categories",
                  "disabled": true
                },
                {
                  "key": "user_thread_default_category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Default categories (agent messages)",
                  "disabled": true
                },
                {
                  "key": "default_content_language",
                  "value": "\u003cstring\u003e",
                  "description": "Default content language",
                  "disabled": true
                },
                {
                  "key": "auto_detect_content_language",
                  "value": "\u003cboolean\u003e",
                  "description": "Auto-detect content language (Boolean)",
                  "disabled": true
                },
                {
                  "key": "content_archiving",
                  "value": "\u003cboolean\u003e",
                  "description": "Automatic archiving of old contents (Boolean)",
                  "disabled": true
                },
                {
                  "key": "content_archiving_period",
                  "value": "\u003cinteger\u003e",
                  "description": "Archive contents older than (seconds)",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Threads",
      "item": [
        {
          "name": "Getting all threads",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_threads",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_threads"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "A search query to filter threads. Please refer to ​Search \u0026 filtering parameters​ for more details.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a thread from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_threads/:threadId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_threads",
                ":threadId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Close a thread",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_threads/:threadId/close",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_threads",
                ":threadId",
                "close"
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Archiving a thread",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_threads/:threadId/ignore",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_threads",
                ":threadId",
                "ignore"
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Open a thread",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_threads/:threadId/open",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_threads",
                ":threadId",
                "open"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Categorizing a thread",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/content_threads/:threadId/update_categories",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "content_threads",
                ":threadId",
                "update_categories"
              ],
              "query": [
                {
                  "key": "thread_category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing the new categories to set on the thread.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Contents",
      "item": [
        {
          "name": "Contents",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/contents",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "contents"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "\u003cstring\u003e",
                  "description": "To filter contents on given query. Query works exactly like threads query but only have those keywords: intervention,identity, identity_group, source, status_in, thread or text. Order can be created_at.desc (default) or created_at.asc. e.g. q=intervention:\"7f946431b6eebffafae642cc\"%20source:\"d19c81948c137d86dac77216\" Please refer to ​Search \u0026 filtering parameters​ for more details.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a content",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/contents",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "contents"
              ],
              "query": [
                {
                  "key": "author_id",
                  "value": "\u003cstring\u003e",
                  "description": "The identity id of content. This parameter is not mandatory, by default it use the token’s user first identity on source.",
                  "disabled": true
                },
                {
                  "key": "body",
                  "value": "\u003cstring\u003e",
                  "description": "The content’s body. This parameter is mandatory.",
                  "disabled": true
                },
                {
                  "key": "in_reply_to_id",
                  "value": "\u003cstring\u003e",
                  "description": "The content’s id you want to reply to. If omitted, a new discussion will be created. If source does not support to initiate discussion this parameter is mandatory.",
                  "disabled": true
                },
                {
                  "key": "private",
                  "value": "\u003cinteger\u003e",
                  "description": "Created contents are public by default, set this parameter to \"1\" in order to create a private reply. It is NOT supported on every source.",
                  "disabled": true
                },
                {
                  "key": "source_id",
                  "value": "\u003cstring\u003e",
                  "description": "The source to create content to. If you specify `in_reply_to_id` parameter, source will be determined from it. Otherwise, this parameter is mandatory.",
                  "disabled": true
                },
                {
                  "key": "attachment_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing the attachments’ ids that need to be attached to this content.",
                  "disabled": true
                },
                {
                  "key": "title",
                  "value": "\u003cstring\u003e",
                  "description": "For an email source. The subject of the email. This parameter is mandatory when initiating a discussion.",
                  "disabled": true
                },
                {
                  "key": "to[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "For an email or SMS source. For an email, an array containing the email addresses used in the “To” section of the email. This parameter is mandatory when initiating a discussion. For a SMS, the number the SMS will be sent to. It must start with 00 or +, example: +33634231224 or 0033634231224. This parameter is mandatory when initiating a discussion.",
                  "disabled": true
                },
                {
                  "key": "cc[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "For an email source. An array containing the email addresses used in the “Cc” section of the email.",
                  "disabled": true
                },
                {
                  "key": "bcc[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "For an email source. An array containing the email addresses used in the “Bcc” section of the email.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a content from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/contents/:contentId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "contents",
                ":contentId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Ignoring a content",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/contents/:contentId/ignore",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "contents",
                ":contentId",
                "ignore"
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Categorizing a content",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/contents/:contentId/update_categories",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "contents",
                ":contentId",
                "update_categories"
              ],
              "query": [
                {
                  "key": "category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing the new categories to set on the content.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "CustomFields",
      "item": [
        {
          "name": "Getting all custom fields",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/custom_fields",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "custom_fields"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a custom field",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/custom_fields",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "custom_fields"
              ],
              "query": [
                {
                  "key": "associated_type_name",
                  "value": "\u003cstring\u003e",
                  "description": "The associated type of custom field. It can be IdentityGroup or Intervention.",
                  "disabled": true
                },
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The label of the custom field.",
                  "disabled": true
                },
                {
                  "key": "key",
                  "value": "\u003cstring\u003e",
                  "description": "The key of the custom field (example: customer_id). This is used to determine how it is stored on identity groups.",
                  "disabled": true
                },
                {
                  "key": "type",
                  "value": "\u003cstring\u003e",
                  "description": "The type of the custom field. It can be string, boolean, text, integer, float, single_choice,",
                  "disabled": true
                },
                {
                  "key": "choices",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "A list of choices to be for single_choice, or multiple_choice types. This must be given",
                  "disabled": true
                },
                {
                  "key": "multiple",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this as no effect on single_choice, multiple_choice or boolean types",
                  "disabled": true
                },
                {
                  "key": "position",
                  "value": "\u003cinteger\u003e",
                  "description": "an integer that indicates custom field’s position between others (default: -1).",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a custom field from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/custom_fields/:customFieldId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "custom_fields",
                ":customFieldId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a custom field",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/custom_fields/:customFieldId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "custom_fields",
                ":customFieldId"
              ],
              "query": [
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "Custom field’s label.",
                  "disabled": true
                },
                {
                  "key": "choices",
                  "value": "\u003carray.string.csv\u003e",
                  "disabled": true
                },
                {
                  "key": "position",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "Custom field’s position.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a custom field",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/custom_fields/:customFieldId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "custom_fields",
                ":customFieldId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Events",
      "item": [
        {
          "name": "Getting all events",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/events",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "events"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "\u003cstring\u003e",
                  "description": "To filter events on given query. Query works exactly like threads query but only have those keywords: content, content_thread, name_in, created_before, created_after, user. Order can be created_at.desc (default) or created_at.asc. e.g. q=name_in:\"content.replied\"%20content_thread:\"7f946431b6eebffafae642cc\"%20created_after:\"2014-03-20\"%20user:\"4ee91f197aa58d01b500000f\"%20order:\"created_at.asc\"\n* DateTime parameters should be ISO-8601\n* you can specify multiple value for a given keyword: q=name_in:’content.replied’\u0026name_in:’content.ignored’\nPlease refer to ​Search \u0026 filtering parameters​ for more details.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting an event from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/events/:eventId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "events",
                ":eventId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Folders",
      "item": [
        {
          "name": "Getting all folders",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/folders",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "folders"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a folder",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/folders",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "folders"
              ],
              "query": [
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "Folder’s label (mandatory).",
                  "disabled": true
                },
                {
                  "key": "parent_id",
                  "value": "\u003cstring\u003e",
                  "description": "ID of the parent folder.",
                  "disabled": true
                },
                {
                  "key": "position",
                  "value": "\u003cinteger\u003e",
                  "description": "position of the folder. ",
                  "disabled": true
                },
                {
                  "key": "query",
                  "value": "\u003cstring\u003e",
                  "description": "query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”",
                  "disabled": true
                },
                {
                  "key": "render_threads_count",
                  "value": "\u003cboolean\u003e",
                  "description": "boolean describing display of the number of threads. ",
                  "disabled": true
                },
                {
                  "key": "role_restriction[only][]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`",
                  "disabled": true
                },
                {
                  "key": "team_restriction[only][]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a folder from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/folders/:folderId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "folders",
                ":folderId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a folder",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/folders/:folderId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "folders",
                ":folderId"
              ],
              "query": [
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "Folder’s label (mandatory).",
                  "disabled": true
                },
                {
                  "key": "parent_id",
                  "value": "\u003cstring\u003e",
                  "description": "ID of the parent folder.",
                  "disabled": true
                },
                {
                  "key": "position",
                  "value": "\u003cinteger\u003e",
                  "description": "position of the folder. ",
                  "disabled": true
                },
                {
                  "key": "query",
                  "value": "\u003cstring\u003e",
                  "description": "query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”",
                  "disabled": true
                },
                {
                  "key": "render_threads_count",
                  "value": "\u003cboolean\u003e",
                  "description": "boolean describing display of the number of threads. ",
                  "disabled": true
                },
                {
                  "key": "role_restriction[only][]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`",
                  "disabled": true
                },
                {
                  "key": "team_restriction[only][]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a folder",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/folders/:folderId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "folders",
                ":folderId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Identities",
      "item": [
        {
          "name": "Getting all identities",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/identities",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "identities"
              ],
              "query": [
                {
                  "key": "community_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter identities on given community id.",
                  "disabled": true
                },
                {
                  "key": "identity_group_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter on given group id.",
                  "disabled": true
                },
                {
                  "key": "user_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter identities on given user id.",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "\u003cstring\u003e",
                  "description": "To change the criteria chosen to sort the identities. The value can be “created_at” or",
                  "disabled": true
                },
                {
                  "key": "foreign_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter identities on given user id",
                  "disabled": true
                },
                {
                  "key": "uuid",
                  "value": "\u003cstring\u003e",
                  "description": "To filter identities on given uuid",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting an identity from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/identities/:identityId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "identities",
                ":identityId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Identity Groups",
      "item": [
        {
          "name": "Getting all identity groups",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/identity_groups",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "identity_groups"
              ],
              "query": [
                {
                  "key": "firstname",
                  "value": "\u003cstring\u003e",
                  "description": "To filter groups on given firstname.",
                  "disabled": true
                },
                {
                  "key": "lastname",
                  "value": "\u003cstring\u003e",
                  "description": "To filter groups on given lastname.",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "\u003cstring\u003e",
                  "description": "To filter groups that have given email.",
                  "disabled": true
                },
                {
                  "key": "uuid",
                  "value": "\u003cstring\u003e",
                  "description": "To filter groups that have given uuid.",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "\u003cstring\u003e",
                  "description": "To change the criteria chosen to sort the identities. The value can be “created_at” or “updated_at”.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting an identity group from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/identity_groups/:identityGroupId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "identity_groups",
                ":identityGroupId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating an identity group",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/identity_groups/:identityGroupId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "identity_groups",
                ":identityGroupId"
              ],
              "query": [
                {
                  "key": "company",
                  "value": "\u003cstring\u003e",
                  "description": "Identity company.",
                  "disabled": true
                },
                {
                  "key": "custom_field_values[custom_field_key]",
                  "value": "\u003cstring\u003e",
                  "description": "Identity custom field with key « custom_field_key ». It",
                  "disabled": true
                },
                {
                  "key": "emails",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Identity emails (multiple).",
                  "disabled": true
                },
                {
                  "key": "firstname",
                  "value": "\u003cstring\u003e",
                  "description": "Identity firstname.",
                  "disabled": true
                },
                {
                  "key": "gender",
                  "value": "\u003cstring\u003e",
                  "description": "Identity’s gender. It can be \"man\", \"woman\" or empty.",
                  "disabled": true
                },
                {
                  "key": "home_phones",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Identity home phones (mutiple).",
                  "disabled": true
                },
                {
                  "key": "lastname",
                  "value": "\u003cstring\u003e",
                  "description": "Identity lastname.",
                  "disabled": true
                },
                {
                  "key": "mobile_phones",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Identity mobile phones (multiple).",
                  "disabled": true
                },
                {
                  "key": "notes",
                  "value": "\u003cstring\u003e",
                  "description": "Identity notes.",
                  "disabled": true
                },
                {
                  "key": "tag_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Identity tag ids (multiple).",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Intervention Comments",
      "item": [
        {
          "name": "Getting all intervention comments",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/intervention_comments",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "intervention_comments"
              ],
              "query": [
                {
                  "key": "intervention_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter comments on given intervention id.",
                  "disabled": true
                },
                {
                  "key": "thread_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter comments on given thread id.",
                  "disabled": true
                },
                {
                  "key": "user_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter comments on given user id.",
                  "disabled": true
                },
                {
                  "key": "identity_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter comments on given identity id.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating an intervention comment",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/intervention_comments",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "intervention_comments"
              ],
              "query": [
                {
                  "key": "body",
                  "value": "\u003cstring\u003e",
                  "description": "The comment body (mandatory).",
                  "disabled": true
                },
                {
                  "key": "intervention_id",
                  "value": "\u003cstring\u003e",
                  "description": "The comment intervention id (mandatory).",
                  "disabled": true
                },
                {
                  "key": "user_id",
                  "value": "\u003cstring\u003e",
                  "description": "The comment user id (mandatory).",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting an intervention comment from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/intervention_comments/:interventionCommentId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "intervention_comments",
                ":interventionCommentId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting an intervention comment",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/intervention_comments/:interventionCommentId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "intervention_comments",
                ":interventionCommentId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Interventions",
      "item": [
        {
          "name": "Getting all interventions",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions"
              ],
              "query": [
                {
                  "key": "thread_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter interventions on given thread id.",
                  "disabled": true
                },
                {
                  "key": "user_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter interventions on given user id.",
                  "disabled": true
                },
                {
                  "key": "identity_group_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter interventions on given identity_group_id. This will return interventions associated to any identity in the indentity_group.",
                  "disabled": true
                },
                {
                  "key": "identity_id",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "To filter interventions on given identity_id(s). Can be a single value or an array.",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "\u003cstring\u003e",
                  "description": "To change the criteria chosen to sort the interventions. The value can be “created_at” or “updated_at”.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating an intervention",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions"
              ],
              "query": [
                {
                  "key": "content_id",
                  "value": "\u003cstring\u003e",
                  "description": "The content to create intervention on (mandatory).",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting an intervention from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions/:interventionId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions",
                ":interventionId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Cancelling an intervention",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions/:interventionId/cancel",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions",
                ":interventionId",
                "cancel"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Closing an intervention",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions/:interventionId/close",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions",
                ":interventionId",
                "close"
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Reassigning an intervention",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions/:interventionId/reassign",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions",
                ":interventionId",
                "reassign"
              ],
              "query": [
                {
                  "key": "user_id",
                  "value": "\u003cstring\u003e",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Categorizing an intervention",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/interventions/:interventionId/update_categories",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "interventions",
                ":interventionId",
                "update_categories"
              ],
              "query": [
                {
                  "key": "category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Locales",
      "item": [
        {
          "name": "Getting all locales",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/locales",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "locales"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Presence Status",
      "item": [
        {
          "name": "Getting all presence statuses",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/presence_status",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "presence_status"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a presence status",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/presence_status",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "presence_status"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the presence status.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a presence status from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/presence_status/:presenceStatusId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "presence_status",
                ":presenceStatusId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a presence status",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/presence_status/:presenceStatusId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "presence_status",
                ":presenceStatusId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the presence status.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a presence status",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/presence_status/:presenceStatusId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "presence_status",
                ":presenceStatusId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Reply Assistant Entries",
      "item": [
        {
          "name": "Getting​ a​ll​ reply assistant e​ntries",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/entries",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "entries"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating an entry",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/entries",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "entries"
              ],
              "query": [
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the entry.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a reply assistant entry from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/entries/:replyAssistantEntryId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "entries",
                ":replyAssistantEntryId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a reply assistant entry",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/entries/:replyAssistantEntryId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "entries",
                ":replyAssistantEntryId"
              ],
              "query": [
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the entry.",
                  "disabled": true
                },
                {
                  "key": "foreign_id",
                  "value": "\u003cstring\u003e",
                  "description": "The internal/company id of the entry. This is used to match Engage Digital entry’s id with the company one. Example: KB042.",
                  "disabled": true
                },
                {
                  "key": "category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "To restrict the entry to a set of Engage Digital categories. Then, KB entries that do not match message’s categories to which you are replying will not be suggested.",
                  "disabled": true
                },
                {
                  "key": "shortcuts[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "entry shortcuts",
                  "disabled": true
                },
                {
                  "key": "entry_group_id",
                  "value": "\u003cstring\u003e",
                  "description": "Entry group id.",
                  "disabled": true
                },
                {
                  "key": "source_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Source ids (array)",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a reply assistant entry",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/entries/:replyAssistantEntryId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "entries",
                ":replyAssistantEntryId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Reply Assistant Groups",
      "item": [
        {
          "name": "Getting​ a​ll​ reply assistant groups",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/groups",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "groups"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a reply assistant group",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/groups",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "groups"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the group.",
                  "disabled": true
                },
                {
                  "key": "entry_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of the reply assistant entries in this group.",
                  "disabled": true
                },
                {
                  "key": "autocomplete",
                  "value": "\u003cboolean\u003e",
                  "description": "Used for autocompletion in chat.",
                  "disabled": true
                },
                {
                  "key": "position",
                  "value": "\u003cinteger\u003e",
                  "description": "Used to determine the order of the groups in the interface, in ascending order.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a reply assistant group from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/groups/:replyAssistantGroupId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "groups",
                ":replyAssistantGroupId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a reply assistant group",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/groups/:replyAssistantGroupId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "groups",
                ":replyAssistantGroupId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "The name of the group.",
                  "disabled": true
                },
                {
                  "key": "entry_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of the reply assistant entries in this group.",
                  "disabled": true
                },
                {
                  "key": "autocomplete",
                  "value": "\u003cboolean\u003e",
                  "description": "Used for autocompletion in chat.",
                  "disabled": true
                },
                {
                  "key": "position",
                  "value": "\u003cinteger\u003e",
                  "description": "Used to determine the order of the groups in the interface, in ascending order.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a reply assistant group",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/groups/:replyAssistantGroupId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "groups",
                ":replyAssistantGroupId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Reply Assistant Versions",
      "item": [
        {
          "name": "Getting​ a​ll​ reply assistant versions",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/versions",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "versions"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a reply assistant version",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/versions",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "versions"
              ],
              "query": [
                {
                  "key": "body",
                  "value": "\u003cstring\u003e",
                  "description": "Body of the version",
                  "disabled": true
                },
                {
                  "key": "entry_id",
                  "value": "\u003cstring\u003e",
                  "description": "Reply assistant entry id (mandatory)",
                  "disabled": true
                },
                {
                  "key": "source_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Source ids (array)",
                  "disabled": true
                },
                {
                  "key": "format",
                  "value": "\u003cstring\u003e",
                  "description": "Either “text” or “html”",
                  "disabled": true
                },
                {
                  "key": "language",
                  "value": "\u003cstring\u003e",
                  "description": "Language (ex: “fr”)",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a reply assistant version from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/versions/:replyAssistantVersionId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "versions",
                ":replyAssistantVersionId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a reply assistant version",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/versions/:replyAssistantVersionId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "versions",
                ":replyAssistantVersionId"
              ],
              "query": [
                {
                  "key": "body",
                  "value": "\u003cstring\u003e",
                  "description": "Body of the version",
                  "disabled": true
                },
                {
                  "key": "entry_id",
                  "value": "\u003cstring\u003e",
                  "description": "Reply assistant entry id.",
                  "disabled": true
                },
                {
                  "key": "source_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Source ids (array)",
                  "disabled": true
                },
                {
                  "key": "format",
                  "value": "\u003cstring\u003e",
                  "description": "Either “text” or “html”",
                  "disabled": true
                },
                {
                  "key": "language",
                  "value": "\u003cstring\u003e",
                  "description": "Language (ex: “fr”)",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a reply assistant version",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/reply_assistant/versions/:replyAssistantVersionId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "reply_assistant",
                "versions",
                ":replyAssistantVersionId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Roles",
      "item": [
        {
          "name": "Getting all roles",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/roles",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "roles"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a role",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/roles",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "roles"
              ],
              "query": [
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "disabled": true
                },
                {
                  "key": "access_help_center",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "access_previous_messages",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "access_pull_mode",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "admin_stamp_answer",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "approve_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "assign_intervention",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "author_block_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "close_content_thread",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_and_destroy_extension",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_community",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_content_source",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "delay_export_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "delete_content_thread",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "impersonate_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "invite_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_api_access_tokens",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_app_sdk_applications",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_automatic_exports_tasks",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_categories",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_chat",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_custom_fields",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_custom_notifications",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_emails_templates",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_folders",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_ice",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_identities",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_own_notifications",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_reply_assistant",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_roles",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_rules_engine_rules",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_surveys",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_tags",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_teams",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_topologies",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_users_of_my_teams",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "monitor_tasks",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "monitor_team_tasks",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "mute_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "open_content_thread",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "publish_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_community",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_content_source",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_event",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_export",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_identity",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_own_stats",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_presence",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_stats",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_surveys",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "read_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "receive_tasks",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "reply_with_assistant",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "search_contents",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "search_event",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_community",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_content_source",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_extension",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_identity",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_intervention",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_own_intervention",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_settings",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_time_sheet",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "use_emoji",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a role from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/roles/:roleId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "roles",
                ":roleId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a role",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/roles/:roleId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "roles",
                ":roleId"
              ],
              "query": [
                {
                  "key": "access_help_center",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "access_previous_messages",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "access_pull_mode",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "admin_stamp_answer",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "approve_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "assign_intervention",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "author_block_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "close_content_thread",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_and_destroy_extension",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_community",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_content_source",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "create_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "delay_export_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "delete_content_thread",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "impersonate_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "invite_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_api_access_tokens",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_app_sdk_applications",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_automatic_exports_tasks",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_categories",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_chat",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_custom_fields",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_custom_notifications",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_emails_templates",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_folders",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_ice",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_identities",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_own_notifications",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_reply_assistant",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_roles",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_rules_engine_rules",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_surveys",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "manage_tags",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_teams",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_topologies",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "manage_users_of_my_teams",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "monitor_tasks",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "monitor_team_tasks",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "mute_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "open_content_thread",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "publish_content",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_community",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_content_source",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_event",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_export",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_identity",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_own_stats",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_presence",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_stats",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "read_surveys",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "read_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "receive_tasks",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "reply_with_assistant",
                  "value": "\u003cboolean\u003e",
                  "description": "permission only available with the corresponding extension enabled",
                  "disabled": true
                },
                {
                  "key": "search_contents",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "search_event",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_community",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_content_source",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_extension",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_identity",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_intervention",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_own_intervention",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_settings",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_time_sheet",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "update_user",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                },
                {
                  "key": "use_emoji",
                  "value": "\u003cboolean\u003e",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Settings",
      "item": [
        {
          "name": "Getting all settings",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/settings",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "settings"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating settings",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/settings",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "settings"
              ],
              "query": [
                {
                  "key": "activity_presence_threshold",
                  "value": "\u003cinteger\u003e",
                  "description": "(in hours).",
                  "disabled": true
                },
                {
                  "key": "activity_tracking",
                  "value": "\u003cboolean\u003e",
                  "description": "​Enable activity tracking (Boolean)",
                  "disabled": true
                },
                {
                  "key": "beginning_of_week",
                  "value": "\u003cstring\u003e",
                  "description": "(Day of week)",
                  "disabled": true
                },
                {
                  "key": "category_tagging",
                  "value": "\u003cboolean\u003e",
                  "description": "A​ ctivate the forced categorization by source.​ (Boolean)",
                  "disabled": true
                },
                {
                  "key": "content_languages",
                  "value": "\u003cstring\u003e",
                  "description": "(See format)",
                  "disabled": true
                },
                {
                  "key": "dashboard",
                  "value": "\u003cboolean\u003e",
                  "description": "Activate the dashboard (Boolean)",
                  "disabled": true
                },
                {
                  "key": "deny_iframe_integration",
                  "value": "\u003cboolean\u003e",
                  "description": "Prevent the DD to be embed by other websites (Boolean)",
                  "disabled": true
                },
                {
                  "key": "disable_password_autocomplete",
                  "value": "\u003cboolean\u003e",
                  "description": "(Boolean)",
                  "disabled": true
                },
                {
                  "key": "expire_password_after",
                  "value": "\u003cinteger\u003e",
                  "description": "password expiration delay (in seconds)",
                  "disabled": true
                },
                {
                  "key": "expire_password_enabled",
                  "value": "\u003cboolean\u003e",
                  "description": "enable password expiration (Boolean)",
                  "disabled": true
                },
                {
                  "key": "export_in_seconds",
                  "value": "\u003cboolean\u003e",
                  "description": "provide durations in seconds in export (Boolean)",
                  "disabled": true
                },
                {
                  "key": "fold_useless_contents",
                  "value": "\u003cboolean\u003e",
                  "description": "fold archived contents (Boolean)",
                  "disabled": true
                },
                {
                  "key": "fte_duration",
                  "value": "\u003cinteger\u003e",
                  "description": "FTE data period (in hours)",
                  "disabled": true
                },
                {
                  "key": "identity_merge",
                  "value": "\u003cboolean\u003e",
                  "description": "enable identity merge (Boolean)",
                  "disabled": true
                },
                {
                  "key": "intervention_defer_rates[]",
                  "value": "\u003carray.integer\u003e",
                  "description": "(Array of times in seconds)",
                  "disabled": true
                },
                {
                  "key": "intervention_defer_threshold",
                  "value": "\u003cinteger\u003e",
                  "description": "(in seconds)",
                  "disabled": true
                },
                {
                  "key": "intervention_rates",
                  "value": "\u003carray.integer\u003e",
                  "description": "(Array of times in seconds)",
                  "disabled": true
                },
                {
                  "key": "locale",
                  "value": "\u003cstring\u003e",
                  "description": "locale code (String)",
                  "disabled": true
                },
                {
                  "key": "multi_lang",
                  "value": "\u003cboolean\u003e",
                  "description": "activate multi language support for messages (Boolean)",
                  "disabled": true
                },
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Name of the Dimelo Digital (String)",
                  "disabled": true
                },
                {
                  "key": "password_archivable_enabled",
                  "value": "\u003cboolean\u003e",
                  "description": "prohibit reusing old passwords (Boolean)",
                  "disabled": true
                },
                {
                  "key": "password_archivable_size",
                  "value": "\u003cinteger\u003e",
                  "description": "number of archived passwords",
                  "disabled": true
                },
                {
                  "key": "password_min_length",
                  "value": "\u003cinteger\u003e",
                  "description": "minimum character length",
                  "disabled": true
                },
                {
                  "key": "password_non_word",
                  "value": "\u003cboolean\u003e",
                  "description": "should contain at least 1 non alphanumeric char (Boolean)",
                  "disabled": true
                },
                {
                  "key": "password_numbers",
                  "value": "\u003cboolean\u003e",
                  "description": "should contain at least 1 number (Boolean)",
                  "disabled": true
                },
                {
                  "key": "password_recovery_disabled",
                  "value": "\u003cboolean\u003e",
                  "description": "disable password recovery by email (Boolean)",
                  "disabled": true
                },
                {
                  "key": "push_enabled",
                  "value": "\u003cboolean\u003e",
                  "description": "Enable push mode (Boolean)",
                  "disabled": true
                },
                {
                  "key": "reply_as_any_identity",
                  "value": "\u003cboolean\u003e",
                  "description": "Enable reply as any identity (Boolean)",
                  "disabled": true
                },
                {
                  "key": "rtl_support",
                  "value": "\u003cboolean\u003e",
                  "description": "Enable right to left support (Boolean)",
                  "disabled": true
                },
                {
                  "key": "self_approval_required",
                  "value": "\u003cboolean\u003e",
                  "description": "​Allow authors to ask approval of their messages (Boolean)",
                  "disabled": true
                },
                {
                  "key": "session_timeout",
                  "value": "\u003cinteger\u003e",
                  "description": "Session timeout (in minutes)",
                  "disabled": true
                },
                {
                  "key": "spellchecking",
                  "value": "\u003cboolean\u003e",
                  "description": "Enable spellchecking (Boolean)",
                  "disabled": true
                },
                {
                  "key": "style",
                  "value": "\u003cstring\u003e",
                  "description": "Defines the DD’s design (String)",
                  "disabled": true
                },
                {
                  "key": "third_party_services_disabled",
                  "value": "\u003cboolean\u003e",
                  "description": "Disable third-party services (tracking...) (Boolean)",
                  "disabled": true
                },
                {
                  "key": "timezone",
                  "value": "\u003cstring\u003e",
                  "description": "Use the timezone endpoint to get the timezone name (String)",
                  "disabled": true
                },
                {
                  "key": "track_js",
                  "value": "\u003cboolean\u003e",
                  "description": "Track JS errors (Boolean)",
                  "disabled": true
                },
                {
                  "key": "type",
                  "value": "\u003cstring\u003e",
                  "description": "Can be ‘demo’, ‘production’ or ‘archived’",
                  "disabled": true
                },
                {
                  "key": "urgent_task_threshold",
                  "value": "\u003cinteger\u003e",
                  "description": "Chat max response time (in seconds)",
                  "disabled": true
                },
                {
                  "key": "use_system_font",
                  "value": "\u003cboolean\u003e",
                  "description": "Experimental (Boolean)",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Agent Status",
      "item": [
        {
          "name": "Get all connected agents status",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/status",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "status"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Get a connected agent status",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/status/:agentId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "status",
                ":agentId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Changing an agent's status",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/status/:agentId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "status",
                ":agentId"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "\u003cstring\u003e",
                  "description": "A hash of channel_id =\u003e availability (must contain all channels).",
                  "disabled": true
                },
                {
                  "key": "custom_status_id",
                  "value": "\u003cstring\u003e",
                  "description": "id of presence status (optional)",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Tags",
      "item": [
        {
          "name": "Getting all tags",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tags",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tags"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a tag",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tags",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tags"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Tag name (mandatory).",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a tag from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tags/:tagId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tags",
                ":tagId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a tag",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tags/:tagId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tags",
                ":tagId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Tag’s label.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a tag",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tags/:tagId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tags",
                ":tagId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "Getting all tasks",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tasks",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tasks"
              ],
              "query": [
                {
                  "key": "queue",
                  "value": "\u003cstring\u003e",
                  "description": "To filter tasks on given queue name (filters on the “global” queue by default).The most commonly used queues are: “global” (contains every task pending assignation), “workbin_{agent_id}” (contains every tasks assigned to the {agent_id} agent, “history” (contains every processed tasks), and “undelivered” (contains every undelivered tasks). If queue is set to “workbins” all the tasks currently in a workbin will be returned.",
                  "disabled": true
                },
                {
                  "key": "channel_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter tasks on given channel id.",
                  "disabled": true
                },
                {
                  "key": "step",
                  "value": "\u003cstring\u003e",
                  "description": "To filter tasks on the step they’re currently in.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a task from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tasks/:taskId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tasks",
                ":taskId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Move a task to another queue",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tasks/:taskId/move",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tasks",
                ":taskId",
                "move"
              ],
              "query": [
                {
                  "key": "queue",
                  "value": "\u003cstring\u003e",
                  "description": "Name of the queue task has to be moved in.",
                  "disabled": true
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Transferring a task",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/tasks/:taskId/transfer",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "tasks",
                ":taskId",
                "transfer"
              ],
              "query": [
                {
                  "key": "agent_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of agents to transfer the task to (multiple).",
                  "disabled": true
                },
                {
                  "key": "bypass",
                  "value": "\u003cstring\u003e",
                  "description": "Force the transfer to the first agent in agent_ids if set. When bypass is used,",
                  "disabled": true
                },
                {
                  "key": "category_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Filter agents receiving the task depending on their categories.",
                  "disabled": true
                },
                {
                  "key": "language",
                  "value": "\u003cstring\u003e",
                  "description": "Filter agents receiving the task depending on their spoken languages.",
                  "disabled": true
                },
                {
                  "key": "team_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "Filter agents receiving the task depending on their teams.",
                  "disabled": true
                },
                {
                  "key": "comment",
                  "value": "\u003cstring\u003e",
                  "description": "Add a comment to the task.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Teams",
      "item": [
        {
          "name": "Getting all teams",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/teams",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "teams"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a team",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/teams",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "teams"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Team name.",
                  "disabled": true
                },
                {
                  "key": "leader_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of user id as leaders",
                  "disabled": true
                },
                {
                  "key": "user_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of user id as team members.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a team from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/teams/:teamId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "teams",
                ":teamId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a team",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/teams/:teamId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "teams",
                ":teamId"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "\u003cstring\u003e",
                  "description": "Team name.",
                  "disabled": true
                },
                {
                  "key": "leader_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of user id as leaders",
                  "disabled": true
                },
                {
                  "key": "user_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of user id as team members.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a team",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/teams/:teamId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "teams",
                ":teamId"
              ],
              "query": [
                {
                  "key": "take_over_category_id",
                  "value": "\u003cstring\u003e",
                  "description": "ID of a category to recategorize (optional).",
                  "disabled": true
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Time Sheets",
      "item": [
        {
          "name": "Getting all time sheets",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/time_sheets",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "time_sheets"
              ],
              "query": [
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a time sheet",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/time_sheets",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "time_sheets"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this field is used to enable/disable a time sheet.",
                  "disabled": true
                },
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The label of the time sheet.",
                  "disabled": true
                },
                {
                  "key": "source_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing id of each source using your time sheet.",
                  "disabled": true
                },
                {
                  "key": "holidays_region",
                  "value": "\u003cstring\u003e",
                  "description": "A string containing the first two letters of your country (example: \"fr\"/\"en\"/\"es\"), useful to bootstrap default holidays following to a country.",
                  "disabled": true
                },
                {
                  "key": "holidays",
                  "value": "\u003cstring\u003e",
                  "description": "An array containing one or more hash of holidays, a holiday must contain a name (string) and a date (string), the date must be in a valid format, a valid format is a format corresponding to your domain’s locale).",
                  "disabled": true
                },
                {
                  "key": "monday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. For example: “a-b,c-d”: “a” is the beginning of the first interval of the day, “b” is the ending of the first interval of the day, “c” is the beginning of the second interval of the day, “d” is the ending of the second interval of the day",
                  "disabled": true
                },
                {
                  "key": "tuesday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "wednesday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "thursday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "friday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "saturday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "sunday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a time sheet from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/time_sheets/:timeSheetId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "time_sheets",
                ":timeSheetId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a time sheet",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/time_sheets/:timeSheetId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "time_sheets",
                ":timeSheetId"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this field is used to enable/disable a time sheet.",
                  "disabled": true
                },
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The label of the time sheet.",
                  "disabled": true
                },
                {
                  "key": "source_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing id of each source using your time sheet.",
                  "disabled": true
                },
                {
                  "key": "holidays",
                  "value": "\u003cstring\u003e",
                  "description": "An array containing one or more hash of holidays, a holiday must contain a name (string) and a date (string), the date must be in a valid format, a valid format is a format corresponding to your domain’s locale).",
                  "disabled": true
                },
                {
                  "key": "monday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. For example: “a-b,c-d”: “a” is the beginning of the first interval of the day, “b” is the ending of the first interval of the day, “c” is the beginning of the second interval of the day, “d” is the ending of the second interval of the day",
                  "disabled": true
                },
                {
                  "key": "tuesday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "wednesday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "thursday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "friday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "saturday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                },
                {
                  "key": "sunday_hours",
                  "value": "\u003cstring\u003e",
                  "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a time sheet",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/time_sheets/:timeSheetId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "time_sheets",
                ":timeSheetId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Timezones",
      "item": [
        {
          "name": "Getting all timezones",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/timezones",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "timezones"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Getting all users",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/users",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "users"
              ],
              "query": [
                {
                  "key": "email",
                  "value": "\u003cstring\u003e",
                  "description": "To filter users on given email.",
                  "disabled": true
                },
                {
                  "key": "category_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter users on given category id.",
                  "disabled": true
                },
                {
                  "key": "identity_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter users on given identity id.",
                  "disabled": true
                },
                {
                  "key": "external_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter users on given external id.",
                  "disabled": true
                },
                {
                  "key": "role_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter users on given role id.",
                  "disabled": true
                },
                {
                  "key": "team_id",
                  "value": "\u003cstring\u003e",
                  "description": "To filter users on given team id.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a user",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/users",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "users"
              ],
              "query": [
                {
                  "key": "category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of category ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "\u003cstring\u003e",
                  "description": "User email (mandatory).",
                  "disabled": true
                },
                {
                  "key": "enabled",
                  "value": "\u003cboolean\u003e",
                  "description": "Whether the user is enabled or not (boolean).",
                  "disabled": true
                },
                {
                  "key": "external_id",
                  "value": "\u003cstring\u003e",
                  "description": "User external id, used for SSO.",
                  "disabled": true
                },
                {
                  "key": "firstname",
                  "value": "\u003cstring\u003e",
                  "description": "User firstname (mandatory).",
                  "disabled": true
                },
                {
                  "key": "gender",
                  "value": "\u003cstring\u003e",
                  "description": "User gender (\"man\" or \"woman\").",
                  "disabled": true
                },
                {
                  "key": "identity_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of identity ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "lastname",
                  "value": "\u003cstring\u003e",
                  "description": "User lastname (mandatory).",
                  "disabled": true
                },
                {
                  "key": "locale",
                  "value": "\u003cstring\u003e",
                  "description": "Language for the user interface.",
                  "disabled": true
                },
                {
                  "key": "nickname",
                  "value": "\u003cstring\u003e",
                  "description": "User nickname.",
                  "disabled": true
                },
                {
                  "key": "password",
                  "value": "\u003cstring\u003e",
                  "description": "User plain password (mandatory).",
                  "disabled": true
                },
                {
                  "key": "role_id",
                  "value": "\u003cstring\u003e",
                  "description": "User role id (mandatory).",
                  "disabled": true
                },
                {
                  "key": "team_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of team ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "timezone",
                  "value": "\u003cstring\u003e",
                  "description": "Use the timezone endpoint to get the timezone name (String), default is empty for domain timezone.",
                  "disabled": true
                },
                {
                  "key": "spoken_languages[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of locales corresponding to the languages spoken by the user (multiple).",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Inviting a user",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/users/invite",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "users",
                "invite"
              ],
              "query": [
                {
                  "key": "category_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of category ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "\u003cstring\u003e",
                  "description": "User email (mandatory).",
                  "disabled": true
                },
                {
                  "key": "enabled",
                  "value": "\u003cboolean\u003e",
                  "description": "Whether the user is enabled or not (boolean).",
                  "disabled": true
                },
                {
                  "key": "external_id",
                  "value": "\u003cstring\u003e",
                  "description": "User external id.",
                  "disabled": true
                },
                {
                  "key": "firstname",
                  "value": "\u003cstring\u003e",
                  "description": "User firstname (mandatory).",
                  "disabled": true
                },
                {
                  "key": "gender",
                  "value": "\u003cstring\u003e",
                  "description": "User gender (\"man\" or \"woman\").",
                  "disabled": true
                },
                {
                  "key": "identity_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of identity ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "lastname",
                  "value": "\u003cstring\u003e",
                  "description": "User lastname (mandatory).",
                  "disabled": true
                },
                {
                  "key": "locale",
                  "value": "\u003cstring\u003e",
                  "description": "Language for the user interface.",
                  "disabled": true
                },
                {
                  "key": "nickname",
                  "value": "\u003cstring\u003e",
                  "description": "User nickname.",
                  "disabled": true
                },
                {
                  "key": "role_id",
                  "value": "\u003cstring\u003e",
                  "description": "User role id (mandatory).",
                  "disabled": true
                },
                {
                  "key": "team_ids",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of team ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "timezone",
                  "value": "\u003cstring\u003e",
                  "description": "Use the timezone endpoint to get the timezone name (String), default is empty for",
                  "disabled": true
                },
                {
                  "key": "spoken_languages",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of locales corresponding to the languages spoken by the user (multiple).",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a user from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/users/:userId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "users",
                ":userId"
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a user",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/users/:userId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "users",
                ":userId"
              ],
              "query": [
                {
                  "key": "category_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of category ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "\u003cstring\u003e",
                  "description": "User email.",
                  "disabled": true
                },
                {
                  "key": "enabled",
                  "value": "\u003cboolean\u003e",
                  "description": "Whether the user is enabled or not (boolean).",
                  "disabled": true
                },
                {
                  "key": "external_id",
                  "value": "\u003cstring\u003e",
                  "description": "User external id, used for SSO.",
                  "disabled": true
                },
                {
                  "key": "firstname",
                  "value": "\u003cstring\u003e",
                  "description": "User firstname.",
                  "disabled": true
                },
                {
                  "key": "gender",
                  "value": "\u003cstring\u003e",
                  "description": "User gender (\"man\" or \"woman\").",
                  "disabled": true
                },
                {
                  "key": "identity_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of identity ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "lastname",
                  "value": "\u003cstring\u003e",
                  "description": "User lastname.",
                  "disabled": true
                },
                {
                  "key": "locale",
                  "value": "\u003cstring\u003e",
                  "description": "Language for the user interface.",
                  "disabled": true
                },
                {
                  "key": "nickname",
                  "value": "\u003cstring\u003e",
                  "description": "User nickname.",
                  "disabled": true
                },
                {
                  "key": "password",
                  "value": "\u003cstring\u003e",
                  "description": "User plain password.",
                  "disabled": true
                },
                {
                  "key": "role_id",
                  "value": "\u003cstring\u003e",
                  "description": "User role id.",
                  "disabled": true
                },
                {
                  "key": "team_ids[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "User list of team ids (multiple).",
                  "disabled": true
                },
                {
                  "key": "timezone",
                  "value": "\u003cstring\u003e",
                  "description": "Use the timezone endpoint to get the timezone name (String), default is empty for domain timezone.",
                  "disabled": true
                },
                {
                  "key": "spoken_languages[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "List of locales corresponding to the languages spoken by the user (multiple).",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a user",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/users/:userId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "users",
                ":userId"
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    },
    {
      "name": "Webhooks",
      "item": [
        {
          "name": "Getting all webhooks",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/webhooks",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "webhooks"
              ],
              "query": [
                {
                  "key": "access_token",
                  "value": "\u003cstring\u003e",
                  "description": "Access token.",
                  "disabled": true
                },
                {
                  "key": "offset",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The record index to start. Default value is 0.",
                  "disabled": true
                },
                {
                  "key": "limit",
                  "value": "\u003cinteger.int32\u003e",
                  "description": "The max number of records to return. Default value is 30, max value is 150.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Creating a webhook",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/webhooks",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "webhooks"
              ],
              "query": [
                {
                  "key": "access_token",
                  "value": "\u003cstring\u003e",
                  "description": "Access token.",
                  "disabled": true
                },
                {
                  "key": "active",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this field is used to enable/disable a webhook.",
                  "disabled": true
                },
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The label of the webhook.",
                  "disabled": true
                },
                {
                  "key": "staging_use",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this field is used to determine if a webhook will be run in staging",
                  "disabled": true
                },
                {
                  "key": "url",
                  "value": "\u003cstring\u003e",
                  "description": "The url of a webhook. This is used to determine the endpoint of your webhook, where",
                  "disabled": true
                },
                {
                  "key": "verify_token",
                  "value": "\u003cstring\u003e",
                  "description": "The token used in your webhook.",
                  "disabled": true
                },
                {
                  "key": "secret",
                  "value": "\u003cstring\u003e",
                  "description": "The secret key that will be served as a ​`X-Dimelo-Secret​` header in every request.",
                  "disabled": true
                },
                {
                  "key": "registered_events[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing all the events that your webhook wants to subscribe.",
                  "disabled": true
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Getting a webhook from its id",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/webhooks/:webhookId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "webhooks",
                ":webhookId"
              ],
              "query": [
                {
                  "key": "access_token",
                  "value": "\u003cstring\u003e",
                  "description": "Access token.",
                  "disabled": true
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Updating a webhook",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/webhooks/:webhookId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "webhooks",
                ":webhookId"
              ],
              "query": [
                {
                  "key": "access_token",
                  "value": "\u003cstring\u003e",
                  "description": "Access token.",
                  "disabled": true
                },
                {
                  "key": "active",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this field is used to enable/disable a webhook.",
                  "disabled": true
                },
                {
                  "key": "label",
                  "value": "\u003cstring\u003e",
                  "description": "The label of the webhook.",
                  "disabled": true
                },
                {
                  "key": "staging_use",
                  "value": "\u003cboolean\u003e",
                  "description": "true or false, this field is used to determine if a webhook will be run in staging",
                  "disabled": true
                },
                {
                  "key": "url",
                  "value": "\u003cstring\u003e",
                  "description": "The url of a webhook. This is used to determine the endpoint of your webhook, where",
                  "disabled": true
                },
                {
                  "key": "verify_token",
                  "value": "\u003cstring\u003e",
                  "description": "The token used in your webhook.",
                  "disabled": true
                },
                {
                  "key": "secret",
                  "value": "\u003cstring\u003e",
                  "description": "The secret key that will be served as a ​`X-Dimelo-Secret​` header in every request.",
                  "disabled": true
                },
                {
                  "key": "registered_events[]",
                  "value": "\u003carray.string.csv\u003e",
                  "description": "An array containing all the events that your webhook wants to subscribe.",
                  "disabled": true
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        },
        {
          "name": "Deleting a webhook",
          "request": {
            "url": {
              "raw": "{{RINGCENTRAL_ENGAGE_SERVER_URL}}/webhooks/:webhookId",
              "auth": null,
              "host": [
                "{{RINGCENTRAL_ENGAGE_SERVER_URL}}"
              ],
              "path": [
                "webhooks",
                ":webhookId"
              ],
              "query": [
                {
                  "key": "access_token",
                  "value": "\u003cstring\u003e",
                  "description": "Access token.",
                  "disabled": true
                }
              ]
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{RINGCENTRAL_ENGAGE_ACCESS_TOKEN}}"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {}
          }
        }
      ],
      "request": {
        "url": {
          "auth": null
        },
        "body": {}
      }
    }
  ]
}